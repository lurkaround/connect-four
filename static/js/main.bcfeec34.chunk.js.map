{"version":3,"sources":["ConnectFour.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["ConnectFour","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","player1","player2","currentPlayer","board","gameOver","message","play","bind","assertThisInitialized","r","row","c","push","setState","result","checkAll","togglePlayer","checkVertical","checkDiagonalRight","checkDiagonalLeft","checkHorizontal","checkDraw","initBoard","_this2","react_default","a","createElement","className","onClick","map","i","ConnectFour_Row","key","React","Component","Row","_ref","cell","ConnectFour_Cell","value","columnIndex","Cell","_ref2","color","Header","class","App","src_Header","src_ConnectFour","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bcfeec34.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ConnectFour extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            player1: 1,\r\n            player2: 2,\r\n            currentPlayer: null,\r\n            board: [],\r\n            gameOver: false,\r\n            message: ''\r\n        };\r\n\r\n        // Bind play function to App component\r\n        this.play = this.play.bind(this);\r\n    }\r\n\r\n    // Starts new game\r\n    initBoard() {\r\n        // Create a blank 6x7 matrix\r\n        let board = [];\r\n        for (let r = 0; r < 6; r++) {\r\n            let row = [];\r\n            for (let c = 0; c < 7; c++) { row.push(null) }\r\n            board.push(row);\r\n        }\r\n\r\n        this.setState({\r\n            board,\r\n            currentPlayer: this.state.player1,\r\n            gameOver: false,\r\n            message: ''\r\n        });\r\n    }\r\n\r\n    togglePlayer() {\r\n        return (this.state.currentPlayer === this.state.player1) ? this.state.player2 : this.state.player1;\r\n    }\r\n\r\n    play(c) {\r\n        if (!this.state.gameOver) {\r\n            // Place piece on board\r\n            let board = this.state.board;\r\n            for (let r = 5; r >= 0; r--) {\r\n                if (!board[r][c]) {\r\n                    board[r][c] = this.state.currentPlayer;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Check status of board\r\n            let result = this.checkAll(board);\r\n            if (result === this.state.player1) {\r\n                this.setState({ board, gameOver: true, message: 'Player 1 (red) wins!' });\r\n            } else if (result === this.state.player2) {\r\n                this.setState({ board, gameOver: true, message: 'Player 2 (yellow) wins!' });\r\n            } else if (result === 'draw') {\r\n                this.setState({ board, gameOver: true, message: 'Draw game.' });\r\n            } else {\r\n                this.setState({ board, currentPlayer: this.togglePlayer() });\r\n            }\r\n        } else {\r\n            this.setState({ message: 'Game over. Please start a new game.' });\r\n        }\r\n    }\r\n\r\n    checkVertical(board) {\r\n        // Check only if row is 3 or greater\r\n        for (let r = 3; r < 6; r++) {\r\n            for (let c = 0; c < 7; c++) {\r\n                if (board[r][c]) {\r\n                    if (board[r][c] === board[r - 1][c] &&\r\n                        board[r][c] === board[r - 2][c] &&\r\n                        board[r][c] === board[r - 3][c]) {\r\n                        return board[r][c];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkHorizontal(board) {\r\n        // Check only if column is 3 or less\r\n        for (let r = 0; r < 6; r++) {\r\n            for (let c = 0; c < 4; c++) {\r\n                if (board[r][c]) {\r\n                    if (board[r][c] === board[r][c + 1] &&\r\n                        board[r][c] === board[r][c + 2] &&\r\n                        board[r][c] === board[r][c + 3]) {\r\n                        return board[r][c];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkDiagonalRight(board) {\r\n        // Check only if row is 3 or greater AND column is 3 or less\r\n        for (let r = 3; r < 6; r++) {\r\n            for (let c = 0; c < 4; c++) {\r\n                if (board[r][c]) {\r\n                    if (board[r][c] === board[r - 1][c + 1] &&\r\n                        board[r][c] === board[r - 2][c + 2] &&\r\n                        board[r][c] === board[r - 3][c + 3]) {\r\n                        return board[r][c];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkDiagonalLeft(board) {\r\n        // Check only if row is 3 or greater AND column is 3 or greater\r\n        for (let r = 3; r < 6; r++) {\r\n            for (let c = 3; c < 7; c++) {\r\n                if (board[r][c]) {\r\n                    if (board[r][c] === board[r - 1][c - 1] &&\r\n                        board[r][c] === board[r - 2][c - 2] &&\r\n                        board[r][c] === board[r - 3][c - 3]) {\r\n                        return board[r][c];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkDraw(board) {\r\n        for (let r = 0; r < 6; r++) {\r\n            for (let c = 0; c < 7; c++) {\r\n                if (board[r][c] === null) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        return 'draw';\r\n    }\r\n\r\n    checkAll(board) {\r\n        return this.checkVertical(board) || this.checkDiagonalRight(board) || this.checkDiagonalLeft(board) || this.checkHorizontal(board) || this.checkDraw(board);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initBoard();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"button\" onClick={() => { this.initBoard() }}>New Game</div>\r\n\r\n                <table>\r\n                    <thead>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.board.map((row, i) => (<Row key={i} row={row} play={this.play} />))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <p className=\"message\">{this.state.message}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Row component\r\nconst Row = ({ row, play }) => {\r\n    return (\r\n        <tr>\r\n            {row.map((cell, i) => <Cell key={i} value={cell} columnIndex={i} play={play} />)}\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst Cell = ({ value, columnIndex, play }) => {\r\n    let color = 'white';\r\n    if (value === 1) {\r\n        color = 'red';\r\n    } else if (value === 2) {\r\n        color = 'yellow';\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <div className=\"cell\" onClick={() => { play(columnIndex) }}>\r\n                <div className={color}></div>\r\n            </div>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default ConnectFour;","import React, { Component } from \"react\";\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (<div>\r\n            <h1 class=\"animated fadeInRightBig\">Connect 4</h1>\r\n            <div class=\"circles\">\r\n                <div class=\"circle red-sm\"></div>\r\n                <div class=\"circle yellow-sm\"></div>\r\n                <div class=\"circle red-sm\"></div>\r\n                <div class=\"circle yellow-sm\"></div>\r\n                <div class=\"circle red-sm\"></div>\r\n                <div class=\"circle yellow-sm\"></div>\r\n                <div class=\"circle red-sm\"></div>\r\n                <div class=\"circle yellow-sm\"></div>\r\n            </div>\r\n            <ol> \r\n                <li>Two player game, where each player takes turns (1 move per turn).</li> \r\n                <li>A player wins if they get 4 in a row (horizontally, vertically, or diagonally).</li> \r\n                <li> Game is tied when the whole board is filled up. </li>\r\n                <li> Game is over when 2 or 3 is satisfied.</li>\r\n                <li> Clicking a cell in the board will drop a disc into that column. </li>\r\n            </ol>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport ConnectFour from './ConnectFour';\nimport Header from './Header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ConnectFour />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}